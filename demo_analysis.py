#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∞–Ω–æ–º–∞–ª–∏–π
"""

from ball_mill_anomaly_analysis import BallMillAnomalyAnalyzer
import matplotlib.pyplot as plt

def quick_demo():
    """–ë—ã—Å—Ç—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"""
    print("üöÄ –ë–´–°–¢–†–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ê–ù–ê–õ–ò–ó–ê –ê–ù–û–ú–ê–õ–ò–ô")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = BallMillAnomalyAnalyzer()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ 7 –¥–Ω–µ–π
    print("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞ 7 –¥–Ω–µ–π...")
    data = analyzer.generate_test_data(days=7, freq='10min')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìà –û–°–ù–û–í–ù–´–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò:")
    print(f"–ú–æ—â–Ω–æ—Å—Ç—å: {data['power_kw'].mean():.1f} ¬± {data['power_kw'].std():.1f} –∫–í—Ç")
    print(f"–í–µ—Å —Ä—É–¥—ã: {data['ore_weight_tons'].mean():.1f} ¬± {data['ore_weight_tons'].std():.1f} —Ç")
    print(f"–¢–æ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞: {data['classifier_current_a'].mean():.1f} ¬± {data['classifier_current_a'].std():.1f} –ê")
    
    # –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ–º –∞–Ω–æ–º–∞–ª–∏–∏
    print("\nüîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∞–Ω–æ–º–∞–ª–∏–π...")
    iqr_anomalies = analyzer.detect_statistical_anomalies(method='iqr')
    corr_anomalies = analyzer.detect_correlation_anomalies()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–ù–´–ï –ê–ù–û–ú–ê–õ–ò–ò:")
    for param, data in iqr_anomalies.items():
        print(f"{param}: {data['count']} –∞–Ω–æ–º–∞–ª–∏–π")
    
    # –ü—Ä–æ—Å—Ç–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    plt.figure(figsize=(15, 10))
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä—è–¥—ã
    plt.subplot(2, 2, 1)
    plt.plot(data['timestamp'], data['power_kw'], 'b-', alpha=0.7)
    plt.title('–ú–æ—â–Ω–æ—Å—Ç—å (–∫–í—Ç)')
    plt.xticks(rotation=45)
    
    plt.subplot(2, 2, 2)
    plt.plot(data['timestamp'], data['ore_weight_tons'], 'g-', alpha=0.7)
    plt.title('–í–µ—Å —Ä—É–¥—ã (—Ç)')
    plt.xticks(rotation=45)
    
    plt.subplot(2, 2, 3)
    plt.plot(data['timestamp'], data['classifier_current_a'], 'r-', alpha=0.7)
    plt.title('–¢–æ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ (–ê)')
    plt.xticks(rotation=45)
    
    # –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    plt.subplot(2, 2, 4)
    plt.plot(data['timestamp'], data['power_per_ton'], 'm-', alpha=0.7)
    plt.title('–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–∫–í—Ç/—Ç)')
    plt.xticks(rotation=45)
    
    plt.tight_layout()
    plt.savefig('quick_demo.png', dpi=150, bbox_inches='tight')
    plt.show()
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: quick_demo.png")

if __name__ == "__main__":
    quick_demo()

